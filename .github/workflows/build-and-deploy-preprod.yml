name: Build-Deploy-Preprod
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

env:
  IMAGE: ghcr.io/navikt/familie-tilbake:${{ github.sha }}
jobs:
  build-jar-docker:
    if: github.event.pull_request.draft == false
    name: Bygg app/image, push til github
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
      - name: Bygg med maven u/test
        env:
          SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: mvn -B --no-transfer-progress package verify -Dmaven.test.skip=true --settings .m2/maven-settings.xml -DtrimStackTrace=false --file pom.xml -Dchangelist= -Dsha1=-$TIMESTAMP-$(echo $GITHUB_SHA | cut -c1-7)
      - name: Bygg Docker image
        run: |
          docker build -t $IMAGE .
      - name: Login to GitHub Container Registry
        uses: docker/login-action@ab80d026d4753220c4243394c07c7d80f9638d06
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image
        run: docker push $IMAGE

  run-junit:
    if: github.event.pull_request.draft == false
    name: Kjøre junit tester
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
      - name: Bygg (dependabot)
        if: github.actor == 'dependabot[bot]'
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn verify --settings .m2/maven-settings.xml --file pom.xml
      - name: Bygg med maven + sonar
        if: github.actor != 'dependabot[bot]'
        env:
          SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: mvn -B --no-transfer-progress package verify sonar:sonar --settings .m2/maven-settings.xml -DtrimStackTrace=false --file pom.xml -Dchangelist= -Dsha1=-$TIMESTAMP-$(echo $GITHUB_SHA | cut -c1-7)

  run-e2e:
    if: github.event.pull_request.draft == false && github.actor != 'dependabot[bot]'
    name: Kjør e2e tester
    runs-on: ubuntu-latest
    needs: build-jar-docker
    steps:
      - uses: navikt/github-app-token-generator@v1.1
        id: get-token
        with:
          private-key: ${{ secrets.REPO_CLONER_PRIVATE_KEY }}
          app-id: ${{ secrets.REPO_CLONER_APP_ID }}
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Login to GitHub Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout e2e tests
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        uses: actions/checkout@v2
        with:
          ref: "main"
          repository: navikt/familie-tilbake-e2e
          token: ${{ steps.get-token.outputs.token }}
          path: tilbake-e2e
      - name: Setter riktig familie-tilbake versjon i e2e tester
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        run: sed -i 's/familie-tilbake:latest/familie-tilbake:'$GITHUB_SHA'/g' tilbake-e2e/e2e/docker-compose.yml
      - name: Start alle apper (e2e)
        env:
          INTEGRASJONER_CLIENT_ID: ${{ secrets.INTEGRASJONER_CLIENT_ID }}
          INTEGRASJONER_CLIENT_SECRET: ${{ secrets.INTEGRASJONER_CLIENT_SECRET }}
          INTEGRASJONER_INFOTRYGD_KS_SCOPE: ${{ secrets.INTEGRASJONER_INFOTRYGD_KS_SCOPE }}
          INTEGRASJONER_AAD_GRAPH_SCOPE: ${{ secrets.INTEGRASJONER_AAD_GRAPH_SCOPE }}
          TILBAKE_CLIENT_ID: ${{ secrets.TILBAKE_CLIENT_ID }}
          TILBAKE_CLIENT_SECRET: ${{ secrets.TILBAKE_CLIENT_SECRET }}
          TILBAKE_FRONTEND_CLIENT_ID: ${{ secrets.TILBAKE_FRONTEND_CLIENT_ID }}
          INTEGRASJONER_SCOPE: ${{ secrets.INTEGRASJONER_SCOPE }}
          HISTORIKK_CLIENT_ID: ${{ secrets.HISTORIKK_CLIENT_ID }}
          HISTORIKK_CLIENT_SECRET: ${{ secrets.HISTORIKK_CLIENT_SECRET }}
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        run: cd tilbake-e2e/e2e; ./e2e.sh
      - name: Kjør tester (e2e)
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TILBAKE_CLIENT_ID: ${{ secrets.TILBAKE_CLIENT_ID }}
          TILBAKE_CLIENT_SECRET: ${{ secrets.TILBAKE_CLIENT_SECRET }}
          HISTORIKK_CLIENT_ID: ${{ secrets.HISTORIKK_CLIENT_ID }}
          HISTORIKK_CLIENT_SECRET: ${{ secrets.HISTORIKK_CLIENT_SECRET }}
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        run: cd tilbake-e2e/autotest; mvn -B --no-transfer-progress --settings .m2/maven-settings.xml -Dtest="**" test
      - name: Samle Docker-logs ved feil
        if: failure()
        uses: jwalton/gh-docker-logs@v2.0.1
        with:
          dest: './logs'
      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs
      - name: Laste opp logs til GitHub
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: docker-logs-${{ github.run_number }}.tgz
          path: ./logs.tgz
          retention-days: 2

  deploy-to-dev:
    if: github.event.pull_request.draft == false && github.actor != 'dependabot[bot]'
    name: Deploy til dev-fss
    runs-on: ubuntu-latest
    needs: build-jar-docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: app-preprod.yaml
      - name: Deploy dvh_sak_topic
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: kafka/dvh_sak_topic.yaml
      - name: Deploy dvh_vedtak_topic
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: kafka/dvh_vedtak_topic.yaml
      - name: Deploy hentfagsystemsbehandling_request_topic
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: kafka/hentfagsystemsbehandling_request_topic.yaml
      - name: Deploy hentfagsystemsbehandling_respons_topic
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: kafka/hentfagsystemsbehandling_respons_topic.yaml
